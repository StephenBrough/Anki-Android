apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.triplet.play'
def homePath = System.properties['user.home']

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.ichi2.anki"
        minSdkVersion 21
        targetSdkVersion 27
        testApplicationId "com.ichi2.anki.tests"
        vectorDrawables.useSupportLibrary = true

        versionCode 20900105
        versionName "2.9alpha5"
    }

    lintOptions {
        abortOnError false
        disable 'TypographyEllipsis'
    }

    signingConfigs {
//        release {
//            storeFile file("${homePath}/src/android-keystore")
//            keyAlias "nrkeystorealias"
//            storePassword System.getenv("KSTOREPWD")
//            keyPassword System.getenv("KEYPWD")
//        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }

    useLibrary 'org.apache.http.legacy'

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/compiler_main.kotlin_module'
    }
}

play {
    serviceAccountEmail = '294046724212-r3bef6kl46pb9gk0h1pl5rcjmpfrdpjl@developer.gserviceaccount.com'
    pk12File = file("${homePath}/src/583631bdd16d.p12")
    track = 'alpha'
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.1'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Dependencies.supportAppCompat

    // Support
    // Note: the design support library can be quite buggy, so test everything thoroughly before updating it
    implementation Dependencies.supportDesign
    implementation Dependencies.supportCustomTabs
    implementation Dependencies.supportRecyclerView

    // Sqlite
    implementation Dependencies.requerySqliteAndroid

    // Material Third Party
    implementation(Dependencies.materialDialogs) {
        //exclude group: 'com.android.support'  // uncomment to force our local support lib version
        transitive = true
    }
    implementation Dependencies.fab

    // Logging
    implementation Dependencies.timber
    implementation(Dependencies.crashlytics) {
        transitive = true;
    }

    // Gson
    implementation Dependencies.gson
    implementation project(":api")

    // Testing
    testImplementation Dependencies.junit
    testImplementation Dependencies.mockitoCore
    testImplementation Dependencies.powerMockCore
    testImplementation Dependencies.powerMockJunit
    testImplementation Dependencies.powerMockApiMockito
    testImplementation Dependencies.hamcrest

    // Kotlin
    implementation Dependencies.kotlinStdlib
    implementation Dependencies.kotlinReflect
    implementation Dependencies.kotlinCoroutines


    // Architecture Components
    implementation Dependencies.archRuntime
    implementation Dependencies.archExtensions
    implementation Dependencies.archCompiler
    kapt Dependencies.archCompiler
    annotationProcessor Dependencies.archCompiler
    implementation Dependencies.archRoom
    implementation Dependencies.archRoomCompiler
    kapt Dependencies.archRoomCompiler
    annotationProcessor Dependencies.archRoomCompiler
//    androidTestAnnotationProcessor "android.arch.lifecycle:compiler:1.0.0"
//    testAnnotationProcessor "android.arch.lifecycle:compiler:1.0.0"
}

apply from: "testconfig.gradle"
kotlin {
    experimental {
        coroutines "enable"
    }
}
